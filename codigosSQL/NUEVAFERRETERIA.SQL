CREATE TABLE TAB_OFICINA(
    CODIGO_OFICINA VARCHAR(10),
    CIUDAD VARCHAR(15),
    PAIS VARCHAR(20),
    TELEFONO VARCHAR(20),
    DIRECCION_PRINCIPAL VARCHAR(50)
);

CREATE TABLE TAB_PRODUCTO(
    CODIGO_PRODUCTO VARCHAR(10),
    NOMBRE VARCHAR(50),
    DIMENSIONES VARCHAR(50),
    PROVEEDOR VARCHAR(20),
    DESCRIPCION VARCHAR(250),
    CANTIDAD NUMBER(4),
    PRECIO_VENTA NUMBER(12),
    PRECIO_PROVEEDOR NUMBER(12)
);

CREATE TABLE TAB_DETALLE_PEDIDO(
    CODIGO_PEDIDO VARCHAR(10),                     
    CODIGO_PRODUCTO VARCHAR(10),
    CANTIDAD NUMBER(4),
    PRECIO NUMBER(12),
    NUMERO_LINEA NUMBER(4)
);

CREATE TABLE TAB_CLIENTE(
    CODIGO_CLIENTE VARCHAR(15),
    NOMBRE_CLIENTE VARCHAR(25),
    APELLIDO_CLIENTE VARCHAR(25),
    TELEFONO VARCHAR(15),
    DIRECCION_PRINCIPAL VARCHAR(50),
    CIUDAD VARCHAR(25),
    PAIS VARCHAR(25),
    CODIGO_EMPLEADO VARCHAR(10),
    LIMITE_CREDITO NUMBER(12)
);

create TABLE TAB_PEDIDO(
    CODIGO_PEDIDO VARCHAR(10),
    FECHA_PEDIDO DATE,
    FECHA_ESPERADA DATE,
    FECHA_ENTREGA DATE,
    ESTADO VARCHAR(50),
    COMENTARIOS VARCHAR(50),
    CODIGO_CLIENTE VARCHAR(10)
);

CREATE TABLE TAB_PAGO(
    CODIGO_CLIENTE VARCHAR(10),
    FORMA_DE_PAGO VARCHAR(50),
    ID_TRANSACCION VARCHAR(10),
    FECHA_PAGO DATE,
    TOTAL NUMBER(12)
);

CREATE TABLE TAB_EMPLEADO(
    CODIGO_EMPLEADO VARCHAR(10),
    NOMBRE VARCHAR(25),
    APELLIDO VARCHAR(25),
    EXTENCION VARCHAR(12),
    EMAIL VARCHAR(50),
    CODIGO_OFICINA VARCHAR(10),
    CODIGO_JEFE VARCHAR(10),
    PUESTO VARCHAR(25)
);

--tablas extra creadas apartir de joins y splits
CREATE TABLE MAYOR_CREDITO(
    CODIGO_CLIENTE VARCHAR(15),
    NOMBRE_COMPLETO VARCHAR(50),
    CODIGO_EMPLEADO VARCHAR(10),
    LIMITE_CREDITO NUMBER(12)
);

CREATE TABLE MENOR_CREDITO(
    CODIGO_CLIENTE VARCHAR(15),
    NOMBRE_COMPLETO VARCHAR(50),
    CODIGO_EMPLEADO VARCHAR(10),
    LIMITE_CREDITO NUMBER(12)
);

CREATE TABLE PEDIDO_COM(
    CODIGO_PEDIDO VARCHAR(10),                     
    CODIGO_PRODUCTO VARCHAR(10),
    CANTIDAD NUMBER(4),
    PRECIO NUMBER(12),
    NUMERO_LINEA NUMBER(4),
    FECHA_PEDIDO DATE,
    FECHA_ESPERADA DATE,
    FECHA_ENTREGA DATE,
    ESTADO VARCHAR(50),
    COMENTARIOS VARCHAR(50),
    CODIGO_CLIENTE VARCHAR(10)
);

CREATE TABLE FACTURACION_DETALLE(
    CODIGO_PEDIDO VARCHAR(10),                     
    CODIGO_PRODUCTO VARCHAR(10),
    CANTIDAD NUMBER(4),
    PRECIO NUMBER(12),
    FECHA_PEDIDO DATE,
    FECHA_ESPERADA DATE,
    FECHA_ENTREGA DATE,
    ESTADO VARCHAR(50),
    CODIGO_CLIENTE VARCHAR(10),
    FORMA_DE_PAGO VARCHAR(50),
    ID_TRANSACCION VARCHAR(10),
    FECHA_PAGO DATE,
    TOTAL NUMBER(12)
);


SELECT * FROM TAB_OFICINA;
SELECT * FROM TAB_EMPLEADO;
SELECT * FROM TAB_PRODUCTO;
SELECT * FROM FACTURACION_DETALLE;
SELECT * FROM MAYOR_CREDITO;
SELECT * FROM MENOR_CREDITO;
SELECT * FROM PEDIDO_COM;
SELECT * FROM TAB_CLIENTE;
SELECT * FROM TAB_DETALLE_PEDIDO;
SELECT * FROM TAB_PAGO;
SELECT * FROM TAB_PEDIDO;



- defione un ROLL
- tener un onjetivo claro
- contexto
- pedir una solucion


1. SELECT *
FROM EMPLEADOS
WHERE FECHA_INGRESO - SYSDATE > 10;

2. SELECT E.NOMBRE, P.NOMBRE_PROYECTO
FROM EMPLEADOS E
LEFT JOIN ON E.ID_EMPLEADO = P.ID_RESPONSABLE;

7. encuentro muy util hacer consultas con tiempo, para un analisis temporal
8. es mejor el calculo al usar un filtro de fecha